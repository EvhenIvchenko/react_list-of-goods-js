{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","id","name","sortTypes","App","useState","sortType","setSortType","isReversed","setIsReversed","goods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","goodsSorter","className","onClick","type","cn","prevState","map","item","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WAGZC,EACc,WADdA,EAEY,SA2BX,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SAAqBA,EAArB,GAAuD,IAAzBJ,EAAwB,EAAxBA,SAAUE,EAAc,EAAdA,WAChCG,EAAW,YAAOD,GAmBxB,OAjBIJ,GACFK,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKH,EACH,OAAOU,EAAMX,KAAKa,cAAcD,EAAMZ,MACxC,KAAKC,EACH,OAAOU,EAAMX,KAAKc,OAASF,EAAMZ,KAAKc,OACxC,QACE,OAAO,MAKXR,GACFG,EAAYM,UAGPN,EAOOO,CAAYlB,EAAiB,CAAEM,WAAUE,eAWvD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAYJ,IAC3BkB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAaH,IAJ7B,iCAUA,wBACEiB,QAAS,kBAAMb,EAAYJ,IAC3BkB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAaH,IAJ7B,4BAUA,wBACEiB,QAAS,WAhCfX,GAAc,SAAAc,GAAS,OAAKA,MAiCtBF,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAad,IAJjB,sBAUEF,GAAYE,IACZ,wBACEY,QAAS,kBAvCjBb,EAAY,SACZE,GAAc,IAuCNY,KAAK,SACLF,UAAWG,IAAG,SAAU,YAAa,YAHvC,sBAUJ,6BACGZ,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,EAAKvB,MAHDuB,EAAKxB,aC1GtByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c28ad698.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n\nconst sortTypes = {\n  SORT_BY_ALPHABET: 'alphabet',\n  SORT_BY_LENGTH: 'length',\n  REVERSE: 'reverse',\n};\n\nfunction goodsSorter(goods, { sortType, isReversed }) {\n  const sortedGoods = [...goods];\n\n  if (sortType) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case sortTypes.SORT_BY_ALPHABET:\n          return good1.name.localeCompare(good2.name);\n        case sortTypes.SORT_BY_LENGTH:\n          return good1.name.length - good2.name.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = goodsSorter(goodsFromServer, { sortType, isReversed });\n\n  function toggleArrayMethod() {\n    setIsReversed(prevState => !prevState);\n  }\n\n  function handleResetClick() {\n    setSortType('');\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(sortTypes.SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== sortTypes.SORT_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(sortTypes.SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== sortTypes.SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => toggleArrayMethod()}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            onClick={() => handleResetClick()}\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(item => (\n          <li\n            key={item.id}\n            data-cy=\"Good\"\n          >\n            {item.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}